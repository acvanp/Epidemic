shiny::runApp()
runApp()
runApp()
# all time series and local data
rawdata = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
rawdata = rawdata[which(rawdata$Country_Region == "US"),]
rawdeaths = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv")
rawdeaths = rawdeaths[which(rawdeaths$Country_Region == "US"), abs(ncol(rawdata)-ncol(rawdeaths)):ncol(rawdeaths)]
# US data - merge archived data and daily reports with local US data
recovered.ar.us = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/archived_data/archived_time_series/time_series_19-covid-Recovered_archived_0325.csv")
confirmed.ar.us = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/archived_data/archived_time_series/time_series_19-covid-Confirmed_archived_0325.csv")
deaths.ar.us = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/archived_data/archived_time_series/time_series_19-covid-Deaths_archived_0325.csv")
recovered.ar.us = recovered.ar.us[which(recovered.ar.us$Country.Region == "US"),]
recovered.ar.us = recovered.ar.us[which(!grepl(",", recovered.ar.us$Province.State)),]
recovered.ar.us = recovered.ar.us[order(recovered.ar.us$Province.State),]
confirmed.ar.us = confirmed.ar.us[which(confirmed.ar.us$Country.Region == "US"),]
confirmed.ar.us = confirmed.ar.us[which(!grepl(",", confirmed.ar.us$Province.State)),]
confirmed.ar.us = confirmed.ar.us[order(confirmed.ar.us$Province.State),]
deaths.ar.us = deaths.ar.us[which(!grepl(",", deaths.ar.us$Province.State)),]
deaths.ar.us = deaths.ar.us[order(deaths.ar.us$Province.State),]
deaths.ar.us = deaths.ar.us[which(deaths.ar.us$Country.Region == "US"),]
if(format(now(tzone = "UTC"), "%H") < 24){
dd = format(as.Date(now(tzone = "UTC"))-1, "%m-%d-%Y")}else(
dd = format(now(tzone = "UTC"), "%m-%d-%Y")
)
ll = format(seq(as.Date("2020-03-23"), as.Date(dd, "%m-%d-%Y"), "days"), "%m-%d-%Y")
for(i in 1:length(ll)){
x = read.csv(paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/",
ll[i], ".csv", sep = ""))
x = x[which(x$Country_Region == "US"),]
x = x[, c("Province_State", "Country_Region", "Confirmed", "Deaths", "Recovered", "Lat", "Long_", "Combined_Key")]
#if(nrow(x)<3){break}
x = aggregate(. ~ x$Province_State, x, FUN = sum)
colnames(x)[1] = "Province.State"
mm = merge(confirmed.ar.us, x, by = "Province.State", all.x = TRUE)
if(substring(format(as.Date(ll[i], "%m-%d-%Y"), "%m"),1,1) == 0){mon = substring(format(as.Date(ll[i], "%m-%d-%Y"), "%m"),2,2)}
cname = paste("X", mon, ".", format(as.Date(ll[i], "%m-%d-%Y"), "%d"), ".", "20", sep = "")
confirmed.ar.us[,65 + i] = mm$Confirmed
colnames(confirmed.ar.us)[65 + i] = cname
deaths.ar.us[,65 + i] = mm$Deaths
colnames(deaths.ar.us)[65 + i] = cname
recovered.ar.us[,65 + i] = mm$Recovered
colnames(recovered.ar.us)[65 + i] = cname
}
runApp('~/Demo/COVID-19')
runApp('~/Demo/COVID-19')
